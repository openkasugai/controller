---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dataflows.example.com
spec:
  group: example.com
  names:
    kind: DataFlow
    listKind: DataFlowList
    plural: dataflows
    singular: dataflow
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .spec.functionChainRef.name
      name: FunctionChain
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DataFlow is the Schema for the dataflows API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataFlowSpec defines the desired state of DataFlow
            properties:
              connectionUserParameter:
                items:
                  properties:
                    from:
                      properties:
                        functionKey:
                          type: string
                      required:
                      - functionKey
                      type: object
                    to:
                      properties:
                        functionKey:
                          type: string
                      required:
                      - functionKey
                      type: object
                    userParams:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                      type: object
                  required:
                  - from
                  - to
                  - userParams
                  type: object
                type: array
                x-kubernetes-preserve-unknown-fields: true
              dryrun:
                type: boolean
              endPoint:
                properties:
                  ip:
                    type: string
                  port:
                    format: int32
                    type: integer
                  protocol:
                    default: TCP
                    type: string
                required:
                - ip
                - port
                - protocol
                type: object
              functionChainRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              functionUserParameter:
                items:
                  properties:
                    functionKey:
                      type: string
                    userParams:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                      type: object
                  required:
                  - functionKey
                  - userParams
                  type: object
                type: array
                x-kubernetes-preserve-unknown-fields: true
              requirements:
                properties:
                  all:
                    properties:
                      capacity:
                        format: int32
                        type: integer
                    required:
                    - capacity
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  connections:
                    items:
                      properties:
                        capacity:
                          format: int32
                          type: integer
                        from:
                          properties:
                            functionKey:
                              type: string
                          required:
                          - functionKey
                          type: object
                        to:
                          properties:
                            functionKey:
                              type: string
                          required:
                          - functionKey
                          type: object
                      required:
                      - capacity
                      - from
                      - to
                      type: object
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                  functions:
                    items:
                      properties:
                        capacity:
                          format: int32
                          type: integer
                        functionKey:
                          type: string
                      required:
                      - capacity
                      - functionKey
                      type: object
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              startPoint:
                properties:
                  ip:
                    type: string
                  port:
                    format: int32
                    type: integer
                  protocol:
                    default: TCP
                    type: string
                required:
                - ip
                - port
                - protocol
                type: object
              userRequirement:
                type: string
            required:
            - functionChainRef
            type: object
          status:
            description: DataFlowStatus defines the observed state of DataFlow
            properties:
              connectionType:
                items:
                  description: ConnectionType is the Schema for the connectiontypes
                    API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: ConnectionTypeSpec defines the desired state of
                        ConnectionType
                      properties:
                        connectionInfoNamespaces:
                          items:
                            type: string
                          type: array
                        connectionTypeName:
                          type: string
                      required:
                      - connectionInfoNamespaces
                      type: object
                    status:
                      description: ConnectionTypeStatus defines the observed state
                        of ConnectionType
                      properties:
                        availableInterfaces:
                          additionalProperties:
                            properties:
                              destinations:
                                additionalProperties:
                                  properties:
                                    route:
                                      items:
                                        properties:
                                          from:
                                            type: string
                                          to:
                                            type: string
                                          type:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: object
                            type: object
                          type: object
                        interfaces:
                          items:
                            type: string
                          type: array
                        status:
                          type: string
                      required:
                      - status
                      type: object
                  type: object
                type: array
              endPoint:
                type: string
              functionChain:
                description: FunctionChain is the Schema for the functionchains API
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: FunctionChainSpec defines the desired state of FunctionChain
                    properties:
                      connectionTypeNamespace:
                        type: string
                      connections:
                        items:
                          properties:
                            connectionTypeName:
                              default: auto
                              type: string
                            customParameter:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              type: object
                            from:
                              properties:
                                functionKey:
                                  type: string
                                port:
                                  format: int32
                                  type: integer
                              required:
                              - functionKey
                              - port
                              type: object
                            to:
                              properties:
                                functionKey:
                                  type: string
                                port:
                                  format: int32
                                  type: integer
                              required:
                              - functionKey
                              - port
                              type: object
                          required:
                          - connectionTypeName
                          - from
                          - to
                          type: object
                        type: array
                      functionTypeNamespace:
                        type: string
                      functions:
                        additionalProperties:
                          properties:
                            customParameter:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              type: object
                            functionName:
                              type: string
                            version:
                              type: string
                          required:
                          - functionName
                          - version
                          type: object
                        type: object
                    required:
                    - connectionTypeNamespace
                    - connections
                    - functionTypeNamespace
                    - functions
                    type: object
                  status:
                    description: FunctionChainStatus defines the observed state of
                      FunctionChain
                    properties:
                      status:
                        type: string
                    required:
                    - status
                    type: object
                type: object
              functionType:
                items:
                  description: FunctionType is the Schema for the functiontypes API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: FunctionTypeSpec defines the desired state of FunctionType
                      properties:
                        functionInfoCMRef:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        functionName:
                          type: string
                        version:
                          type: string
                      type: object
                    status:
                      description: FunctionTypeStatus defines the observed state of
                        FunctionType
                      properties:
                        recommendConnection:
                          items:
                            type: string
                          type: array
                        regionTypeCandidates:
                          items:
                            type: string
                          type: array
                        status:
                          type: string
                      required:
                      - status
                      type: object
                  type: object
                type: array
              scheduledConnections:
                items:
                  properties:
                    connectionMethod:
                      type: string
                    connectionPath:
                      items:
                        properties:
                          entityID:
                            type: string
                          usedType:
                            type: string
                        required:
                        - entityID
                        - usedType
                        type: object
                      type: array
                    from:
                      properties:
                        functionKey:
                          type: string
                        interfaceType:
                          type: string
                        port:
                          format: int32
                          type: integer
                      required:
                      - functionKey
                      type: object
                    to:
                      properties:
                        functionKey:
                          type: string
                        interfaceType:
                          type: string
                        port:
                          format: int32
                          type: integer
                      required:
                      - functionKey
                      type: object
                  required:
                  - connectionMethod
                  - from
                  - to
                  type: object
                type: array
                x-kubernetes-preserve-unknown-fields: true
              scheduledFunctions:
                additionalProperties:
                  properties:
                    deviceIndex:
                      format: int32
                      type: integer
                    deviceType:
                      type: string
                    functionIndex:
                      format: int32
                      type: integer
                    nodeName:
                      type: string
                    regionName:
                      type: string
                  required:
                  - deviceIndex
                  - deviceType
                  - nodeName
                  - regionName
                  type: object
                type: object
                x-kubernetes-preserve-unknown-fields: true
              startPoint:
                type: string
              status:
                type: string
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
