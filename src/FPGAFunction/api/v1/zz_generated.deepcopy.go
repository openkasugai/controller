//go:build !ignore_autogenerated

/*
Copyright 2024 NTT Corporation , FUJITSU LIMITED

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccIDInfo) DeepCopyInto(out *AccIDInfo) {
	*out = *in
	if in.PartitionName != nil {
		in, out := &in.PartitionName, &out.PartitionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccIDInfo.
func (in *AccIDInfo) DeepCopy() *AccIDInfo {
	if in == nil {
		return nil
	}
	out := new(AccIDInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccStatuses) DeepCopyInto(out *AccStatuses) {
	*out = *in
	if in.AcceleratorID != nil {
		in, out := &in.AcceleratorID, &out.AcceleratorID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccStatuses.
func (in *AccStatuses) DeepCopy() *AccStatuses {
	if in == nil {
		return nil
	}
	out := new(AccStatuses)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccStatusesByDevice) DeepCopyInto(out *AccStatusesByDevice) {
	*out = *in
	if in.PartitionName != nil {
		in, out := &in.PartitionName, &out.PartitionName
		*out = new(string)
		**out = **in
	}
	if in.Statused != nil {
		in, out := &in.Statused, &out.Statused
		*out = make([]AccStatuses, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccStatusesByDevice.
func (in *AccStatusesByDevice) DeepCopy() *AccStatusesByDevice {
	if in == nil {
		return nil
	}
	out := new(AccStatusesByDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnyData) DeepCopyInto(out *AnyData) {
	*out = *in
	out.Functions = in.Functions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnyData.
func (in *AnyData) DeepCopy() *AnyData {
	if in == nil {
		return nil
	}
	out := new(AnyData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BitstreamData) DeepCopyInto(out *BitstreamData) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BitstreamData.
func (in *BitstreamData) DeepCopy() *BitstreamData {
	if in == nil {
		return nil
	}
	out := new(BitstreamData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BsConfigInfo) DeepCopyInto(out *BsConfigInfo) {
	*out = *in
	if in.ChildBitstreamIDs != nil {
		in, out := &in.ChildBitstreamIDs, &out.ChildBitstreamIDs
		*out = make([]ChildBsSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BsConfigInfo.
func (in *BsConfigInfo) DeepCopy() *BsConfigInfo {
	if in == nil {
		return nil
	}
	out := new(BsConfigInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBs) DeepCopyInto(out *ChildBs) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBs.
func (in *ChildBs) DeepCopy() *ChildBs {
	if in == nil {
		return nil
	}
	out := new(ChildBs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChildBs) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsChain) DeepCopyInto(out *ChildBsChain) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int32)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsChain.
func (in *ChildBsChain) DeepCopy() *ChildBsChain {
	if in == nil {
		return nil
	}
	out := new(ChildBsChain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsConversion) DeepCopyInto(out *ChildBsConversion) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int32)
		**out = **in
	}
	if in.Module != nil {
		in, out := &in.Module, &out.Module
		*out = new([]ConversionModule)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConversionModule, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsConversion.
func (in *ChildBsConversion) DeepCopy() *ChildBsConversion {
	if in == nil {
		return nil
	}
	out := new(ChildBsConversion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsDirecttrans) DeepCopyInto(out *ChildBsDirecttrans) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int32)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsDirecttrans.
func (in *ChildBsDirecttrans) DeepCopy() *ChildBsDirecttrans {
	if in == nil {
		return nil
	}
	out := new(ChildBsDirecttrans)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsFunctions) DeepCopyInto(out *ChildBsFunctions) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int32)
		**out = **in
	}
	if in.Module != nil {
		in, out := &in.Module, &out.Module
		*out = new([]FunctionsModule)
		if **in != nil {
			in, out := *in, *out
			*out = make([]FunctionsModule, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]intstr.IntOrString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]intstr.IntOrString, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.IntraResourceMgmtMap != nil {
		in, out := &in.IntraResourceMgmtMap, &out.IntraResourceMgmtMap
		*out = new(map[string]FunctionsIntraResourceMgmtMap)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]FunctionsIntraResourceMgmtMap, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
	in.DeploySpec.DeepCopyInto(&out.DeploySpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsFunctions.
func (in *ChildBsFunctions) DeepCopy() *ChildBsFunctions {
	if in == nil {
		return nil
	}
	out := new(ChildBsFunctions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsLLDMA) DeepCopyInto(out *ChildBsLLDMA) {
	*out = *in
	if in.Cids != nil {
		in, out := &in.Cids, &out.Cids
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsLLDMA.
func (in *ChildBsLLDMA) DeepCopy() *ChildBsLLDMA {
	if in == nil {
		return nil
	}
	out := new(ChildBsLLDMA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsList) DeepCopyInto(out *ChildBsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChildBs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsList.
func (in *ChildBsList) DeepCopy() *ChildBsList {
	if in == nil {
		return nil
	}
	out := new(ChildBsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChildBsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsModule) DeepCopyInto(out *ChildBsModule) {
	*out = *in
	if in.Ptu != nil {
		in, out := &in.Ptu, &out.Ptu
		*out = new(ChildBsPtu)
		(*in).DeepCopyInto(*out)
	}
	if in.LLDMA != nil {
		in, out := &in.LLDMA, &out.LLDMA
		*out = new(ChildBsLLDMA)
		(*in).DeepCopyInto(*out)
	}
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(ChildBsChain)
		(*in).DeepCopyInto(*out)
	}
	if in.Directtrans != nil {
		in, out := &in.Directtrans, &out.Directtrans
		*out = new(ChildBsDirecttrans)
		(*in).DeepCopyInto(*out)
	}
	if in.Conversion != nil {
		in, out := &in.Conversion, &out.Conversion
		*out = new(ChildBsConversion)
		(*in).DeepCopyInto(*out)
	}
	if in.Functions != nil {
		in, out := &in.Functions, &out.Functions
		*out = new([]ChildBsFunctions)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ChildBsFunctions, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsModule.
func (in *ChildBsModule) DeepCopy() *ChildBsModule {
	if in == nil {
		return nil
	}
	out := new(ChildBsModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsPtu) DeepCopyInto(out *ChildBsPtu) {
	*out = *in
	if in.Cids != nil {
		in, out := &in.Cids, &out.Cids
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int32)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]intstr.IntOrString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]intstr.IntOrString, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsPtu.
func (in *ChildBsPtu) DeepCopy() *ChildBsPtu {
	if in == nil {
		return nil
	}
	out := new(ChildBsPtu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsRegion) DeepCopyInto(out *ChildBsRegion) {
	*out = *in
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = new(ChildBsModule)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxFunctions != nil {
		in, out := &in.MaxFunctions, &out.MaxFunctions
		*out = new(int32)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(int32)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsRegion.
func (in *ChildBsRegion) DeepCopy() *ChildBsRegion {
	if in == nil {
		return nil
	}
	out := new(ChildBsRegion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsSpec) DeepCopyInto(out *ChildBsSpec) {
	*out = *in
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]ChildBsRegion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChildBitstreamID != nil {
		in, out := &in.ChildBitstreamID, &out.ChildBitstreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsSpec.
func (in *ChildBsSpec) DeepCopy() *ChildBsSpec {
	if in == nil {
		return nil
	}
	out := new(ChildBsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChildBsStatus) DeepCopyInto(out *ChildBsStatus) {
	*out = *in
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]ChildBsRegion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChildBitstreamID != nil {
		in, out := &in.ChildBitstreamID, &out.ChildBitstreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChildBsStatus.
func (in *ChildBsStatus) DeepCopy() *ChildBsStatus {
	if in == nil {
		return nil
	}
	out := new(ChildBsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConversionModule) DeepCopyInto(out *ConversionModule) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConversionModule.
func (in *ConversionModule) DeepCopy() *ConversionModule {
	if in == nil {
		return nil
	}
	out := new(ConversionModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Details) DeepCopyInto(out *Details) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.DMAChannelID != nil {
		in, out := &in.DMAChannelID, &out.DMAChannelID
		*out = new(int32)
		**out = **in
	}
	if in.LLDMAConnectorID != nil {
		in, out := &in.LLDMAConnectorID, &out.LLDMAConnectorID
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Details.
func (in *Details) DeepCopy() *Details {
	if in == nil {
		return nil
	}
	out := new(Details)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRegionInfo) DeepCopyInto(out *DeviceRegionInfo) {
	*out = *in
	if in.DeviceFilePath != nil {
		in, out := &in.DeviceFilePath, &out.DeviceFilePath
		*out = new(string)
		**out = **in
	}
	if in.DeviceUUID != nil {
		in, out := &in.DeviceUUID, &out.DeviceUUID
		*out = new(string)
		**out = **in
	}
	if in.FunctionTargets != nil {
		in, out := &in.FunctionTargets, &out.FunctionTargets
		*out = make([]RegionInDevice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRegionInfo.
func (in *DeviceRegionInfo) DeepCopy() *DeviceRegionInfo {
	if in == nil {
		return nil
	}
	out := new(DeviceRegionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvsData) DeepCopyInto(out *EnvsData) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvsData.
func (in *EnvsData) DeepCopy() *EnvsData {
	if in == nil {
		return nil
	}
	out := new(EnvsData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvsInfo) DeepCopyInto(out *EnvsInfo) {
	*out = *in
	if in.EachEnv != nil {
		in, out := &in.EachEnv, &out.EachEnv
		*out = make([]EnvsData, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvsInfo.
func (in *EnvsInfo) DeepCopy() *EnvsInfo {
	if in == nil {
		return nil
	}
	out := new(EnvsInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGA) DeepCopyInto(out *FPGA) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGA.
func (in *FPGA) DeepCopy() *FPGA {
	if in == nil {
		return nil
	}
	out := new(FPGA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FPGA) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGACatalog) DeepCopyInto(out *FPGACatalog) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGACatalog.
func (in *FPGACatalog) DeepCopy() *FPGACatalog {
	if in == nil {
		return nil
	}
	out := new(FPGACatalog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGACatalogmapRxTx) DeepCopyInto(out *FPGACatalogmapRxTx) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(map[string]Details)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]Details, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGACatalogmapRxTx.
func (in *FPGACatalogmapRxTx) DeepCopy() *FPGACatalogmapRxTx {
	if in == nil {
		return nil
	}
	out := new(FPGACatalogmapRxTx)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAFuncConfig) DeepCopyInto(out *FPGAFuncConfig) {
	*out = *in
	out.ParentBitstream = in.ParentBitstream
	out.ChildBitstream = in.ChildBitstream
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Parameters = in.Parameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAFuncConfig.
func (in *FPGAFuncConfig) DeepCopy() *FPGAFuncConfig {
	if in == nil {
		return nil
	}
	out := new(FPGAFuncConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAFunction) DeepCopyInto(out *FPGAFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAFunction.
func (in *FPGAFunction) DeepCopy() *FPGAFunction {
	if in == nil {
		return nil
	}
	out := new(FPGAFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FPGAFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAFunctionChannelIDs) DeepCopyInto(out *FPGAFunctionChannelIDs) {
	*out = *in
	in.Rx.DeepCopyInto(&out.Rx)
	in.Tx.DeepCopyInto(&out.Tx)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAFunctionChannelIDs.
func (in *FPGAFunctionChannelIDs) DeepCopy() *FPGAFunctionChannelIDs {
	if in == nil {
		return nil
	}
	out := new(FPGAFunctionChannelIDs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAFunctionList) DeepCopyInto(out *FPGAFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FPGAFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAFunctionList.
func (in *FPGAFunctionList) DeepCopy() *FPGAFunctionList {
	if in == nil {
		return nil
	}
	out := new(FPGAFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FPGAFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAFunctionSpec) DeepCopyInto(out *FPGAFunctionSpec) {
	*out = *in
	out.DataFlowRef = in.DataFlowRef
	if in.AcceleratorIDs != nil {
		in, out := &in.AcceleratorIDs, &out.AcceleratorIDs
		*out = make([]AccIDInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionIndex != nil {
		in, out := &in.FunctionIndex, &out.FunctionIndex
		*out = new(int32)
		**out = **in
	}
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make([]EnvsInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedMemory != nil {
		in, out := &in.SharedMemory, &out.SharedMemory
		*out = new(SharedMemorySpec)
		**out = **in
	}
	if in.FunctionKernelID != nil {
		in, out := &in.FunctionKernelID, &out.FunctionKernelID
		*out = new(int32)
		**out = **in
	}
	if in.FunctionChannelID != nil {
		in, out := &in.FunctionChannelID, &out.FunctionChannelID
		*out = new(int32)
		**out = **in
	}
	if in.PtuKernelID != nil {
		in, out := &in.PtuKernelID, &out.PtuKernelID
		*out = new(int32)
		**out = **in
	}
	if in.FrameworkKernelID != nil {
		in, out := &in.FrameworkKernelID, &out.FrameworkKernelID
		*out = new(int32)
		**out = **in
	}
	if in.Rx != nil {
		in, out := &in.Rx, &out.Rx
		*out = new(RxTxData)
		(*in).DeepCopyInto(*out)
	}
	if in.Tx != nil {
		in, out := &in.Tx, &out.Tx
		*out = new(RxTxData)
		(*in).DeepCopyInto(*out)
	}
	if in.PreviousFunctions != nil {
		in, out := &in.PreviousFunctions, &out.PreviousFunctions
		*out = make(map[string]FromToWBFunction, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NextFunctions != nil {
		in, out := &in.NextFunctions, &out.NextFunctions
		*out = make(map[string]FromToWBFunction, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAFunctionSpec.
func (in *FPGAFunctionSpec) DeepCopy() *FPGAFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(FPGAFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAFunctionStatus) DeepCopyInto(out *FPGAFunctionStatus) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	out.DataFlowRef = in.DataFlowRef
	if in.SharedMemory != nil {
		in, out := &in.SharedMemory, &out.SharedMemory
		*out = new(SharedMemorySpec)
		**out = **in
	}
	in.Rx.DeepCopyInto(&out.Rx)
	in.Tx.DeepCopyInto(&out.Tx)
	if in.AcceleratorStatuses != nil {
		in, out := &in.AcceleratorStatuses, &out.AcceleratorStatuses
		*out = make([]AccStatusesByDevice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAFunctionStatus.
func (in *FPGAFunctionStatus) DeepCopy() *FPGAFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(FPGAFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAList) DeepCopyInto(out *FPGAList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FPGA, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAList.
func (in *FPGAList) DeepCopy() *FPGAList {
	if in == nil {
		return nil
	}
	out := new(FPGAList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FPGAList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGASpec) DeepCopyInto(out *FPGASpec) {
	*out = *in
	if in.ChildBitstreamID != nil {
		in, out := &in.ChildBitstreamID, &out.ChildBitstreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGASpec.
func (in *FPGASpec) DeepCopy() *FPGASpec {
	if in == nil {
		return nil
	}
	out := new(FPGASpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FPGAStatus) DeepCopyInto(out *FPGAStatus) {
	*out = *in
	if in.ChildBitstreamID != nil {
		in, out := &in.ChildBitstreamID, &out.ChildBitstreamID
		*out = new(string)
		**out = **in
	}
	if in.ChildBitstreamCRName != nil {
		in, out := &in.ChildBitstreamCRName, &out.ChildBitstreamCRName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FPGAStatus.
func (in *FPGAStatus) DeepCopy() *FPGAStatus {
	if in == nil {
		return nil
	}
	out := new(FPGAStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrameSizeData) DeepCopyInto(out *FrameSizeData) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrameSizeData.
func (in *FrameSizeData) DeepCopy() *FrameSizeData {
	if in == nil {
		return nil
	}
	out := new(FrameSizeData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FromToWBFunction) DeepCopyInto(out *FromToWBFunction) {
	*out = *in
	out.WBFunctionRef = in.WBFunctionRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FromToWBFunction.
func (in *FromToWBFunction) DeepCopy() *FromToWBFunction {
	if in == nil {
		return nil
	}
	out := new(FromToWBFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionData) DeepCopyInto(out *FunctionData) {
	*out = *in
	out.DataFlowRef = in.DataFlowRef
	if in.AcceleratorIDs != nil {
		in, out := &in.AcceleratorIDs, &out.AcceleratorIDs
		*out = make([]AccIDInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionIndex != nil {
		in, out := &in.FunctionIndex, &out.FunctionIndex
		*out = new(int32)
		**out = **in
	}
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make([]EnvsInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMemorySize != nil {
		in, out := &in.RequestMemorySize, &out.RequestMemorySize
		*out = new(int32)
		**out = **in
	}
	if in.SharedMemory != nil {
		in, out := &in.SharedMemory, &out.SharedMemory
		*out = new(SharedMemorySpec)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	in.Rx.DeepCopyInto(&out.Rx)
	in.Tx.DeepCopyInto(&out.Tx)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionData.
func (in *FunctionData) DeepCopy() *FunctionData {
	if in == nil {
		return nil
	}
	out := new(FunctionData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionDetail) DeepCopyInto(out *FunctionDetail) {
	*out = *in
	if in.FunctionChannelIDs != nil {
		in, out := &in.FunctionChannelIDs, &out.FunctionChannelIDs
		*out = make([]FPGAFunctionChannelIDs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionDetail.
func (in *FunctionDetail) DeepCopy() *FunctionDetail {
	if in == nil {
		return nil
	}
	out := new(FunctionDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionsDeploySpec) DeepCopyInto(out *FunctionsDeploySpec) {
	*out = *in
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(int32)
		**out = **in
	}
	if in.MaxDataFlows != nil {
		in, out := &in.MaxDataFlows, &out.MaxDataFlows
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionsDeploySpec.
func (in *FunctionsDeploySpec) DeepCopy() *FunctionsDeploySpec {
	if in == nil {
		return nil
	}
	out := new(FunctionsDeploySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionsIntraResourceMgmtMap) DeepCopyInto(out *FunctionsIntraResourceMgmtMap) {
	*out = *in
	if in.Available != nil {
		in, out := &in.Available, &out.Available
		*out = new(bool)
		**out = **in
	}
	if in.FunctionCRName != nil {
		in, out := &in.FunctionCRName, &out.FunctionCRName
		*out = new(string)
		**out = **in
	}
	if in.Rx != nil {
		in, out := &in.Rx, &out.Rx
		*out = new(RxTxSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Tx != nil {
		in, out := &in.Tx, &out.Tx
		*out = new(RxTxSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionsIntraResourceMgmtMap.
func (in *FunctionsIntraResourceMgmtMap) DeepCopy() *FunctionsIntraResourceMgmtMap {
	if in == nil {
		return nil
	}
	out := new(FunctionsIntraResourceMgmtMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionsModule) DeepCopyInto(out *FunctionsModule) {
	*out = *in
	if in.FunctionChannelIDs != nil {
		in, out := &in.FunctionChannelIDs, &out.FunctionChannelIDs
		*out = new(string)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionsModule.
func (in *FunctionsModule) DeepCopy() *FunctionsModule {
	if in == nil {
		return nil
	}
	out := new(FunctionsModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkData) DeepCopyInto(out *NetworkData) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkData.
func (in *NetworkData) DeepCopy() *NetworkData {
	if in == nil {
		return nil
	}
	out := new(NetworkData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInDevice) DeepCopyInto(out *RegionInDevice) {
	*out = *in
	if in.Functions != nil {
		in, out := &in.Functions, &out.Functions
		*out = make([]SimpleFunctionInfraStruct, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInDevice.
func (in *RegionInDevice) DeepCopy() *RegionInDevice {
	if in == nil {
		return nil
	}
	out := new(RegionInDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSpecificInfo) DeepCopyInto(out *RegionSpecificInfo) {
	*out = *in
	if in.FunctionTargets != nil {
		in, out := &in.FunctionTargets, &out.FunctionTargets
		*out = make([]RegionInDevice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSpecificInfo.
func (in *RegionSpecificInfo) DeepCopy() *RegionSpecificInfo {
	if in == nil {
		return nil
	}
	out := new(RegionSpecificInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RxTxData) DeepCopyInto(out *RxTxData) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SubnetAddress != nil {
		in, out := &in.SubnetAddress, &out.SubnetAddress
		*out = new(string)
		**out = **in
	}
	if in.GatewayAddress != nil {
		in, out := &in.GatewayAddress, &out.GatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.DMAChannelID != nil {
		in, out := &in.DMAChannelID, &out.DMAChannelID
		*out = new(int32)
		**out = **in
	}
	if in.LLDMAConnectorID != nil {
		in, out := &in.LLDMAConnectorID, &out.LLDMAConnectorID
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RxTxData.
func (in *RxTxData) DeepCopy() *RxTxData {
	if in == nil {
		return nil
	}
	out := new(RxTxData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RxTxSpec) DeepCopyInto(out *RxTxSpec) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(map[string]Details)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]Details, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RxTxSpec.
func (in *RxTxSpec) DeepCopy() *RxTxSpec {
	if in == nil {
		return nil
	}
	out := new(RxTxSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RxTxSpecFunc) DeepCopyInto(out *RxTxSpecFunc) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SubnetAddress != nil {
		in, out := &in.SubnetAddress, &out.SubnetAddress
		*out = new(string)
		**out = **in
	}
	if in.GatewayAddress != nil {
		in, out := &in.GatewayAddress, &out.GatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.DMAChannelID != nil {
		in, out := &in.DMAChannelID, &out.DMAChannelID
		*out = new(int32)
		**out = **in
	}
	if in.LLDMAConnectorID != nil {
		in, out := &in.LLDMAConnectorID, &out.LLDMAConnectorID
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RxTxSpecFunc.
func (in *RxTxSpecFunc) DeepCopy() *RxTxSpecFunc {
	if in == nil {
		return nil
	}
	out := new(RxTxSpecFunc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicerMgmtInfo) DeepCopyInto(out *ServicerMgmtInfo) {
	*out = *in
	if in.NetworkInfo != nil {
		in, out := &in.NetworkInfo, &out.NetworkInfo
		*out = make([]NetworkData, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicerMgmtInfo.
func (in *ServicerMgmtInfo) DeepCopy() *ServicerMgmtInfo {
	if in == nil {
		return nil
	}
	out := new(ServicerMgmtInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedMemorySpec) DeepCopyInto(out *SharedMemorySpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedMemorySpec.
func (in *SharedMemorySpec) DeepCopy() *SharedMemorySpec {
	if in == nil {
		return nil
	}
	out := new(SharedMemorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleFunctionInfraStruct) DeepCopyInto(out *SimpleFunctionInfraStruct) {
	*out = *in
	if in.FunctionIndex != nil {
		in, out := &in.FunctionIndex, &out.FunctionIndex
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleFunctionInfraStruct.
func (in *SimpleFunctionInfraStruct) DeepCopy() *SimpleFunctionInfraStruct {
	if in == nil {
		return nil
	}
	out := new(SimpleFunctionInfraStruct)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WBNamespacedName) DeepCopyInto(out *WBNamespacedName) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WBNamespacedName.
func (in *WBNamespacedName) DeepCopy() *WBNamespacedName {
	if in == nil {
		return nil
	}
	out := new(WBNamespacedName)
	in.DeepCopyInto(out)
	return out
}
